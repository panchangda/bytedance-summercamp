{"remainingRequest":"D:\\HXProjects\\AdministrationSystem\\vue-admin-template\\node_modules\\babel-loader\\lib\\index.js!D:\\HXProjects\\AdministrationSystem\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\HXProjects\\AdministrationSystem\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\HXProjects\\AdministrationSystem\\vue-admin-template\\src\\views\\brand\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\HXProjects\\AdministrationSystem\\vue-admin-template\\src\\views\\brand\\index.vue","mtime":1625882590776},{"path":"D:\\HXProjects\\AdministrationSystem\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\HXProjects\\AdministrationSystem\\vue-admin-template\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\HXProjects\\AdministrationSystem\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\HXProjects\\AdministrationSystem\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IGZldGNoQnJhbmRMaXN0LCBjcmVhdGVCcmFuZCwgdXBkYXRlQnJhbmQsIGRlbGV0ZUJyYW5kIH0gZnJvbSAiQC9hcGkvdGFibGUiOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGxpc3RMb2FkaW5nOiB0cnVlLAogICAgICBkaWFsb2dTdGF0dXM6ICIiLAogICAgICB0ZXh0TWFwOiB7CiAgICAgICAgdXBkYXRlOiAi57yW6L6RIiwKICAgICAgICBjcmVhdGU6ICLliJvlu7oiCiAgICAgIH0sCiAgICAgIHRlbXA6IHsKICAgICAgICBpZDogdW5kZWZpbmVkLAogICAgICAgIGltcG9ydGFuY2U6IDEsCiAgICAgICAgbGV0dGVyOiAiIiwKICAgICAgICBuYW1lOiAiIiwKICAgICAgICBpY29uOiAiIgogICAgICB9LAogICAgICBkaWFsb2dGb3JtVmlzaWJsZTogZmFsc2UsCiAgICAgIHRhYmxlRGF0YTogW10sCiAgICAgIHRvdGFsOiAwLAogICAgICBsaXN0UXVlcnk6IHsKICAgICAgICBwYWdlOiAxLAogICAgICAgIHNpemU6IDIwLAogICAgICAgIGltcG9ydGFuY2U6IHVuZGVmaW5lZCwKICAgICAgICB0aXRsZTogdW5kZWZpbmVkLAogICAgICAgIHR5cGU6IHVuZGVmaW5lZCwKICAgICAgICBzb3J0OiAiK2lkIgogICAgICB9CiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0QnJhbmRMaXN0KCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRCcmFuZExpc3Q6IGZ1bmN0aW9uIGdldEJyYW5kTGlzdCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMubGlzdExvYWRpbmcgPSB0cnVlOwogICAgICBmZXRjaEJyYW5kTGlzdCh0aGlzLmxpc3RRdWVyeSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpcy50b3RhbCA9IHJlc3BvbnNlLmRhdGEudG90YWw7CiAgICAgICAgX3RoaXMudGFibGVEYXRhID0gcmVzcG9uc2UuZGF0YS5pdGVtczsgLy8gSnVzdCB0byBzaW11bGF0ZSB0aGUgdGltZSBvZiB0aGUgcmVxdWVzdAoKICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgIF90aGlzLmxpc3RMb2FkaW5nID0gZmFsc2U7CiAgICAgICAgfSwgMS41ICogMTAwMCk7CiAgICAgIH0pOwogICAgfSwKICAgIGhhbmRsZVRvU2VyaWVzOiBmdW5jdGlvbiBoYW5kbGVUb1NlcmllcyhpbmRleCwgcm93KSB7CiAgICAgIHZhciBzZXJpZXNJZCA9IHRoaXMudGFibGVEYXRhW2luZGV4XS5pZDsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgIG5hbWU6ICLovabns7vliJfooagiLAogICAgICAgIHBhcmFtczogewogICAgICAgICAgc2VyaWVzSWQ6IHNlcmllc0lkCiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICByZXNldFRlbXA6IGZ1bmN0aW9uIHJlc2V0VGVtcCgpIHsKICAgICAgdGhpcy50ZW1wID0gewogICAgICAgIGlkOiB1bmRlZmluZWQsCiAgICAgICAgbGV0dGVyOiAiIiwKICAgICAgICBuYW1lOiAiIiwKICAgICAgICBpY29uOiAiIgogICAgICB9OwogICAgfSwKICAgIGhhbmRsZUNyZWF0ZTogZnVuY3Rpb24gaGFuZGxlQ3JlYXRlKGluZGV4LCByb3cpIHsKICAgICAgdGhpcy5yZXNldFRlbXAoKTsKICAgICAgdGhpcy5kaWFsb2dTdGF0dXMgPSAiY3JlYXRlIjsKICAgICAgdGhpcy5kaWFsb2dGb3JtVmlzaWJsZSA9IHRydWU7CiAgICB9LAogICAgY3JlYXRlRGF0YTogZnVuY3Rpb24gY3JlYXRlRGF0YSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLnRlbXAuaWQgPSBwYXJzZUludChNYXRoLnJhbmRvbSgpICogMTAwKSArIDEwMjQ7IC8vIG1vY2sgYSBpZAoKICAgICAgY3JlYXRlQnJhbmQodGhpcy50ZW1wKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpczIudGFibGVEYXRhLnVuc2hpZnQoX3RoaXMyLnRlbXApOwoKICAgICAgICBfdGhpczIuZGlhbG9nRm9ybVZpc2libGUgPSBmYWxzZTsKCiAgICAgICAgX3RoaXMyLiRub3RpZnkoewogICAgICAgICAgdGl0bGU6ICJTdWNjZXNzIiwKICAgICAgICAgIG1lc3NhZ2U6ICJDcmVhdGVkIFN1Y2Nlc3NmdWxseSIsCiAgICAgICAgICB0eXBlOiAic3VjY2VzcyIsCiAgICAgICAgICBkdXJhdGlvbjogMjAwMAogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICBoYW5kbGVVcGRhdGU6IGZ1bmN0aW9uIGhhbmRsZVVwZGF0ZShpbmRleCwgcm93KSB7CiAgICAgIHRoaXMudGVtcCA9IE9iamVjdC5hc3NpZ24oe30sIHJvdyk7IC8vIGNvcHkgb2JqCgogICAgICB0aGlzLmRpYWxvZ1N0YXR1cyA9ICJ1cGRhdGUiOwogICAgICB0aGlzLmRpYWxvZ0Zvcm1WaXNpYmxlID0gdHJ1ZTsKICAgIH0sCiAgICB1cGRhdGVEYXRhOiBmdW5jdGlvbiB1cGRhdGVEYXRhKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHZhciB0ZW1wRGF0YSA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMudGVtcCk7CiAgICAgIHVwZGF0ZUJyYW5kKHRlbXBEYXRhKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGlmIChyZXNwb25zZS5kYXRhID0gInN1Y2Nlc3MiKSB7CiAgICAgICAgICB2YXIgaW5kZXggPSBfdGhpczMudGFibGVEYXRhLmZpbmRJbmRleChmdW5jdGlvbiAodikgewogICAgICAgICAgICByZXR1cm4gdi5pZCA9PT0gX3RoaXMzLnRlbXAuaWQ7CiAgICAgICAgICB9KTsKCiAgICAgICAgICBfdGhpczMudGFibGVEYXRhLnNwbGljZShpbmRleCwgMSwgX3RoaXMzLnRlbXApOwoKICAgICAgICAgIF90aGlzMy5kaWFsb2dGb3JtVmlzaWJsZSA9IGZhbHNlOwoKICAgICAgICAgIF90aGlzMy4kbm90aWZ5KHsKICAgICAgICAgICAgdGl0bGU6ICJTdWNjZXNzIiwKICAgICAgICAgICAgbWVzc2FnZTogIlVwZGF0ZSBTdWNjZXNzZnVsbHkiLAogICAgICAgICAgICB0eXBlOiAic3VjY2VzcyIsCiAgICAgICAgICAgIGR1cmF0aW9uOiAyMDAwCiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgX3RoaXMzLiRub3RpZnkoewogICAgICAgICAgICB0aXRsZTogIkZhaWx1cmUiLAogICAgICAgICAgICBtZXNzYWdlOiAiVXBkYXRlIEZhaWxlZCIsCiAgICAgICAgICAgIHR5cGU6ICJlcnJvciIsCiAgICAgICAgICAgIGR1cmF0aW9uOiAyMDAwCiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIGhhbmRsZURlbGV0ZTogZnVuY3Rpb24gaGFuZGxlRGVsZXRlKGluZGV4LCByb3cpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICBkZWxldGVCcmFuZChyb3cuaWQpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEgPT0gInN1Y2Nlc3MiKSB7CiAgICAgICAgICBfdGhpczQuJG5vdGlmeSh7CiAgICAgICAgICAgIHRpdGxlOiAiU3VjY2VzcyIsCiAgICAgICAgICAgIG1lc3NhZ2U6ICJEZWxldGUgU3VjY2Vzc2Z1bGx5IiwKICAgICAgICAgICAgdHlwZTogInN1Y2Nlc3MiLAogICAgICAgICAgICBkdXJhdGlvbjogMjAwMAogICAgICAgICAgfSk7CgogICAgICAgICAgX3RoaXM0LnRhYmxlRGF0YS5zcGxpY2UoaW5kZXgsIDEpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBfdGhpczQuJG5vdGlmeSh7CiAgICAgICAgICAgIHRpdGxlOiAiRmFpbHVyZSIsCiAgICAgICAgICAgIG1lc3NhZ2U6ICJVcGRhdGUgRmFpbGVkIiwKICAgICAgICAgICAgdHlwZTogImVycm9yIiwKICAgICAgICAgICAgZHVyYXRpb246IDIwMDAKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgaGFuZGxlUGFnZVR1cm5pbmc6IGZ1bmN0aW9uIGhhbmRsZVBhZ2VUdXJuaW5nKGUpIHsKICAgICAgdGhpcy5saXN0UXVlcnkucGFnZSA9IGU7CiAgICAgIHRoaXMuZ2V0QnJhbmRMaXN0KCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <el-button\r\n      class=\"filter-item\"\r\n      style=\"margin-left: 10px\"\r\n      type=\"primary\"\r\n      icon=\"el-icon-edit\"\r\n      @click=\"handleCreate\"\r\n    >\r\n      Add\r\n    </el-button>\r\n    <el-table\r\n      :data=\"tableData\"\r\n      v-loading=\"listLoading\"\r\n      style=\"width: 100%; margin-bottom: 20px\"\r\n      row-key=\"id\"\r\n      border\r\n    >\r\n      <el-table-column prop=\"letter\" label=\"首字母\" sortable width=\"180\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"icon\" label=\"图标\" width=\"180\">\r\n        <template slot-scope=\"{ row }\">\r\n          <img :src=\"row.icon\" min-width=\"40\" height=\"40\" />\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"name\" label=\"名称\"> </el-table-column>\r\n      <el-table-column label=\"操作\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button\r\n            size=\"mini\"\r\n            @click=\"handleToSeries(scope.$index, scope.now)\"\r\n          >\r\n            查看品牌车系\r\n          </el-button>\r\n          <el-button size=\"mini\" @click=\"handleUpdate(scope.$index, scope.row)\"\r\n            >编辑</el-button\r\n          >\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"danger\"\r\n            @click=\"handleDelete(scope.$index, scope.row)\"\r\n            >删除</el-button\r\n          >\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <el-pagination\r\n      layout=\"prev, pager, next\"\r\n      :total=\"total\"\r\n      :page-size=\"listQuery.size\"\r\n      :current-page.sync=\"listQuery.page\"\r\n      @current-change=\"handlePageTurning\"\r\n    >\r\n    </el-pagination>\r\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\r\n      <el-form\r\n        ref=\"dataForm\"\r\n        :model=\"temp\"\r\n        label-position=\"left\"\r\n        label-width=\"70px\"\r\n        style=\"width: 400px; margin-left: 50px\"\r\n      >\r\n        <el-form-item label=\"首字母\" prop=\"letter\">\r\n          <el-input v-model=\"temp.letter\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"图标地址\" prop=\"icon\">\r\n          <el-input v-model=\"temp.icon\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"名称\" prop=\"name\">\r\n          <el-input v-model=\"temp.name\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogFormVisible = false\"> Cancel </el-button>\r\n        <el-button\r\n          type=\"primary\"\r\n          @click=\"dialogStatus === 'create' ? createData() : updateData()\"\r\n        >\r\n          Confirm\r\n        </el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\nimport {\r\n  fetchBrandList,\r\n  createBrand,\r\n  updateBrand,\r\n  deleteBrand,\r\n} from \"@/api/table\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      listLoading: true,\r\n      dialogStatus: \"\",\r\n      textMap: {\r\n        update: \"编辑\",\r\n        create: \"创建\",\r\n      },\r\n      temp: {\r\n        id: undefined,\r\n        importance: 1,\r\n        letter: \"\",\r\n        name: \"\",\r\n        icon: \"\",\r\n      },\r\n      dialogFormVisible: false,\r\n      tableData: [],\r\n      total: 0,\r\n      listQuery: {\r\n        page: 1,\r\n        size: 20,\r\n        importance: undefined,\r\n        title: undefined,\r\n        type: undefined,\r\n        sort: \"+id\",\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    this.getBrandList();\r\n  },\r\n  methods: {\r\n    getBrandList() {\r\n      this.listLoading = true;\r\n      fetchBrandList(this.listQuery).then((response) => {\r\n        this.total = response.data.total;\r\n        this.tableData = response.data.items;\r\n        // Just to simulate the time of the request\r\n        setTimeout(() => {\r\n          this.listLoading = false;\r\n        }, 1.5 * 1000);\r\n      });\r\n    },\r\n    handleToSeries(index, row) {\r\n      let seriesId = this.tableData[index].id;\r\n      this.$router.push({\r\n        name: \"车系列表\",\r\n        params: {\r\n          seriesId,\r\n        },\r\n      });\r\n    },\r\n    resetTemp() {\r\n      this.temp = {\r\n        id: undefined,\r\n        letter: \"\",\r\n        name: \"\",\r\n        icon: \"\",\r\n      };\r\n    },\r\n    handleCreate(index, row) {\r\n      this.resetTemp();\r\n      this.dialogStatus = \"create\";\r\n      this.dialogFormVisible = true;\r\n    },\r\n    createData() {\r\n      this.temp.id = parseInt(Math.random() * 100) + 1024; // mock a id\r\n      createBrand(this.temp).then(() => {\r\n        this.tableData.unshift(this.temp);\r\n        this.dialogFormVisible = false;\r\n        this.$notify({\r\n          title: \"Success\",\r\n          message: \"Created Successfully\",\r\n          type: \"success\",\r\n          duration: 2000,\r\n        });\r\n      });\r\n    },\r\n    handleUpdate(index, row) {\r\n      this.temp = Object.assign({}, row); // copy obj\r\n      this.dialogStatus = \"update\";\r\n      this.dialogFormVisible = true;\r\n    },\r\n    updateData() {\r\n      const tempData = Object.assign({}, this.temp);\r\n      updateBrand(tempData).then((response) => {\r\n        if ((response.data = \"success\")) {\r\n          const index = this.tableData.findIndex((v) => v.id === this.temp.id);\r\n          this.tableData.splice(index, 1, this.temp);\r\n          this.dialogFormVisible = false;\r\n          this.$notify({\r\n            title: \"Success\",\r\n            message: \"Update Successfully\",\r\n            type: \"success\",\r\n            duration: 2000,\r\n          });\r\n        } else {\r\n          this.$notify({\r\n            title: \"Failure\",\r\n            message: \"Update Failed\",\r\n            type: \"error\",\r\n            duration: 2000,\r\n          });\r\n        }\r\n      });\r\n    },\r\n    handleDelete(index, row) {\r\n      deleteBrand(row.id).then((response) => {\r\n        if (response.data == \"success\") {\r\n          this.$notify({\r\n            title: \"Success\",\r\n            message: \"Delete Successfully\",\r\n            type: \"success\",\r\n            duration: 2000,\r\n          });\r\n          this.tableData.splice(index, 1);\r\n        } else {\r\n          this.$notify({\r\n            title: \"Failure\",\r\n            message: \"Update Failed\",\r\n            type: \"error\",\r\n            duration: 2000,\r\n          });\r\n        }\r\n      });\r\n    },\r\n    handlePageTurning(e) {\r\n      this.listQuery.page = e;\r\n      this.getBrandList();\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n</style>"],"sourceRoot":"src/views/brand"}]}