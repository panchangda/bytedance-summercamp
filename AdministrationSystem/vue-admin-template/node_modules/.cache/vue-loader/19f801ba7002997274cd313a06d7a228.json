{"remainingRequest":"D:\\HXProjects\\AdministrationSystem\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\HXProjects\\AdministrationSystem\\vue-admin-template\\src\\views\\series\\index.vue?vue&type=style&index=0&id=7c511158&scoped=true&lang=css&","dependencies":[{"path":"D:\\HXProjects\\AdministrationSystem\\vue-admin-template\\src\\views\\series\\index.vue","mtime":1625883480100},{"path":"D:\\HXProjects\\AdministrationSystem\\vue-admin-template\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\HXProjects\\AdministrationSystem\\vue-admin-template\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\HXProjects\\AdministrationSystem\\vue-admin-template\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\HXProjects\\AdministrationSystem\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\HXProjects\\AdministrationSystem\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouZmlsdGVyew0KICB3aWR0aDogMTAwJTsNCiAgZGlzcGxheTogZmxleDsNCiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsNCn0NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgQA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/series","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"filter\">\r\n      <el-button\r\n      class=\"filter-item\"\r\n      style=\"margin-left: 10px\"\r\n      type=\"primary\"\r\n      icon=\"el-icon-edit\"\r\n      @click=\"handleCreate\"\r\n    >\r\n      Add\r\n    </el-button>\r\n    </div>\r\n    <el-table\r\n      :data=\"tableData\"\r\n      v-loading=\"listLoading\"\r\n      style=\"width: 100%; margin-bottom: 20px\"\r\n      row-key=\"id\"\r\n      border\r\n    >\r\n      <el-table-column prop=\"image\" label=\"图片\" sortable width=\"360\">\r\n        <template slot-scope=\"{ row }\">\r\n          <img :src=\"row.image\" min-width=\"300\" height=\"200\" />\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"name\" label=\"名称\" width=\"180\"> </el-table-column>\r\n      <el-table-column prop=\"guidePrice\" label=\"指导价（万）\"></el-table-column>\r\n      <el-table-column prop=\"rate\" label=\"评分\"></el-table-column>\r\n      <el-table-column prop=\"tag\" label=\"标签\"> </el-table-column>\r\n      <el-table-column prop=\"isHalted\" label=\"在售/停售\">\r\n        <template slot-scope=\"{ row }\">\r\n          <el-tag :type=\"row.isHalted | statusFilter\">\r\n            {{ row.isHalted ? \"停售\" : \"在售\" }}\r\n          </el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button\r\n            size=\"mini\"\r\n            @click=\"handleToCarType(scope.$index, scope.now)\"\r\n          >\r\n            查看车型\r\n          </el-button>\r\n          <el-button size=\"mini\" @click=\"handleUpdate(scope.$index, scope.row)\"\r\n            >编辑</el-button\r\n          >\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"danger\"\r\n            @click=\"handleDelete(scope.$index, scope.row)\"\r\n            >删除</el-button\r\n          >\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\r\n      <el-form\r\n        ref=\"dataForm\"\r\n        :model=\"temp\"\r\n        label-position=\"left\"\r\n        label-width=\"70px\"\r\n        style=\"width: 400px; margin-left: 50px\"\r\n      >\r\n        <el-form-item label=\"图片\" prop=\"image\">\r\n          <el-input v-model=\"temp.image\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"名称\" prop=\"name\">\r\n          <el-input v-model=\"temp.name\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"指导价\" prop=\"guidePrice\">\r\n          <el-input v-model=\"temp.guidePrice\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"评分\" prop=\"rate\">\r\n          <el-input v-model=\"temp.rate\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"标签\" prop=\"tag\">\r\n          <el-input v-model=\"temp.tag\" />\r\n        </el-form-item>\r\n        <el-radio-group v-model=\"temp.isHalted\">\r\n          <el-radio :label=\"false\">在售</el-radio>\r\n          <el-radio :label=\"true\">停售</el-radio>\r\n        </el-radio-group>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogFormVisible = false\"> Cancel </el-button>\r\n        <el-button\r\n          type=\"primary\"\r\n          @click=\"dialogStatus === 'create' ? createData() : updateData()\"\r\n        >\r\n          Confirm\r\n        </el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\nimport {\r\n  fetchSeriesList,\r\n  createSeries,\r\n  updateSeries,\r\n  deleteSeries,\r\n} from \"@/api/table\";\r\nexport default {\r\n  filters: {\r\n    statusFilter(status) {\r\n      const statusMap = {\r\n        true: \"danger\",\r\n        false: \"success\",\r\n      };\r\n      return statusMap[status];\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      listLoading: true,\r\n      dialogStatus: \"\",\r\n      textMap: {\r\n        update: \"编辑\",\r\n        create: \"创建\",\r\n      },\r\n      dialogFormVisible: false,\r\n      temp: {\r\n        id: undefined,\r\n        name: \"\",\r\n        image: \"\",\r\n        guidePrice: \"\",\r\n        rate: \"\",\r\n        isHalted: \"\",\r\n        tag: \"\",\r\n      },\r\n      tableData: [],\r\n      total: 0,\r\n      listQuery: {\r\n        page: 1,\r\n        size: 10,\r\n        importance: undefined,\r\n        title: undefined,\r\n        type: undefined,\r\n        sort: \"+id\",\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    this.getSeriesList();\r\n  },\r\n  methods: {\r\n    getSeriesList() {\r\n      this.listLoading = true;\r\n      fetchSeriesList(this.$route.params.seriesId).then((response) => {\r\n        this.tableData = response.data.items;\r\n        this.total = response.data.total;\r\n        setTimeout(() => {\r\n          this.listLoading = false;\r\n        }, 1.5 * 1000);\r\n      });\r\n    },\r\n    handleToCarType(index, row) {\r\n      let cartypeId = this.tableData[index].id;\r\n      this.$router.push({\r\n        name: \"车型列表\",\r\n        params: {\r\n          cartypeId,\r\n        },\r\n      });\r\n    },\r\n    resetTemp() {\r\n      this.temp = {\r\n        id: undefined,\r\n        name: \"\",\r\n        image: \"\",\r\n        guidePrice: \"\",\r\n        rate: \"\",\r\n        isHalted: \"\",\r\n        tag: \"\",\r\n      };\r\n    },\r\n    handleCreate(index, row) {\r\n      this.resetTemp();\r\n      this.dialogStatus = \"create\";\r\n      this.dialogFormVisible = true;\r\n    },\r\n    createData() {\r\n      this.temp.id = parseInt(Math.random() * 100) + 1024; // mock a id\r\n      createSeries(this.temp).then((response) => {\r\n        if (response.data == \"success\") {\r\n          this.tableData.unshift(this.temp);\r\n          this.dialogFormVisible = false;\r\n          this.$notify({\r\n            title: \"Success\",\r\n            message: \"Created Successfully\",\r\n            type: \"success\",\r\n            duration: 2000,\r\n          });\r\n        } else {\r\n          this.$notify({\r\n            title: \"Failure\",\r\n            message: \"Created failed\",\r\n            type: \"error\",\r\n            duration: 2000,\r\n          });\r\n        }\r\n      });\r\n    },\r\n    handleUpdate(index, row) {\r\n      this.temp = Object.assign({}, row); // copy obj\r\n      this.dialogStatus = \"update\";\r\n      this.dialogFormVisible = true;\r\n    },\r\n    updateData() {\r\n      const tempData = Object.assign({}, this.temp);\r\n      updateSeries(tempData).then((response) => {\r\n        if (response.data == \"success\") {\r\n          const index = this.tableData.findIndex((v) => v.id === this.temp.id);\r\n          this.tableData.splice(index, 1, this.temp);\r\n          this.dialogFormVisible = false;\r\n          this.$notify({\r\n            title: \"Success\",\r\n            message: \"Update Successfully\",\r\n            type: \"success\",\r\n            duration: 2000,\r\n          });\r\n        } else {\r\n          this.$notify({\r\n            title: \"Failure\",\r\n            message: \"Update failed\",\r\n            type: \"error\",\r\n            duration: 2000,\r\n          });\r\n        }\r\n      });\r\n    },\r\n    handleDelete(index, row) {\r\n      deleteSeries(row).then((response) => {\r\n        if (response.data == \"success\") {\r\n          this.$notify({\r\n            title: \"Success\",\r\n            message: \"Delete Successfully\",\r\n            type: \"success\",\r\n            duration: 2000,\r\n          });\r\n          this.tableData.splice(index, 1);\r\n        } else {\r\n          this.$notify({\r\n            title: \"Failure\",\r\n            message: \"Update Failed\",\r\n            type: \"error\",\r\n            duration: 2000,\r\n          });\r\n        }\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n.filter{\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n</style>"]}]}